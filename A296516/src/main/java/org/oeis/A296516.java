package org.oeis;

import java.util.Map;
import java.util.TreeMap;

/*
 * Experimentations around A296516
 */

public class A296516 {
	
	private static final Poly P = new Poly(1, 0, 0);
	private static final Poly Q = new Poly(0, 1, 1);
	
	private static final Integer N = 19;
	
	public static void main(String[] args) {
		Map<Integer, Poly> mapP = new TreeMap<>();
		Map<Integer, Poly> mapQ = new TreeMap<>();

		Integer n = 1;
		Poly p = P;
		Poly q = Q;
		mapP.put(n, p);
		mapQ.put(n, q);
		// System.out.println("p(" + n + ") = " + p + "\nq(" + n + ") = " + q);
		while (n <= N) {
			n ++;
			Poly pp = Poly.add(p, q);
			Poly qq = Poly.mul(p, q);
			p = pp;
			q = qq;
			mapP.put(n, p);
			mapQ.put(n, q);
			// System.out.println("p(" + n + ") = " + p + "\nq(" + n + ") = " + q);
		}
		
		for (n = 1; n <= N; n ++) {
			Poly r = mapP.get(n);
			Integer k = 10;
			IntegerPair ij = r.coefs.get(k);
			Integer h;
			if (ij == null) {
				h = -1;
			} else {
				h = ij.j;
			}
			System.out.print(h + ", ");
		}
		//System.out.println();
		//System.out.println("P6 = " + mapP.get(6));
		/* 
		 * P, 0, i: -1,  1,  1,  1,  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
		 * P, 1, i:  0,  0,  0,  0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
		 * P, 2, i: -1, -1, -1,  1,  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
		 * P, 3, i: -1, -1, -1, -1,  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
		 * P, 4, i: -1, -1, -1, -1, -1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
		 * 
		 * P,  0, j: -1,  1,  1,  2,  4,  6, 10, 17, 27, 44, 72, 116, 188, 305, 493, 798, 1292, 2090, 3382, ... A004695 ?
		 * P,  1, j:  0,  0,  1,  2,  3,  6, 10, 16, 27, 44, 71, 116, 188, 304, 493, 798, 1291, 2090, 3382, ... A201864 ? // A004695 - A201864 = 1, 0, 0, 1, 
		 * P,  2, j: -1, -1, -1,  1,  3,  5,  9, 16, 26, 43, 71, 115, 187, 304, 492, 797, 1291, 2089, 3381, ... A004695 - 1 ?
		 * P,  3, j: -1, -1, -1, -1,  2,  5,  9, 15, 26, 43, 70, 115, 187, 303, 492, 797, 1290, 2089, 3381, ... A201864 - 1 ?
		 * P,  4, j: -1, -1, -1, -1, -1,  4,  8, 15, 25, 42, 70, 114, 186, 303, 491, 796, 1290, 2088, 3380, ...
		 * P,  5, j: -1, -1, -1, -1, -1,  3,  8, 14, 25, 42, 69, 114, 186, 302, 491, 796, 1289, 2088, 3380, ...
		 * P,  6, j: -1, -1, -1, -1, -1, -1,  7, 14, 24, 41, 69, 113, 185, 302, 490, 795, 1289, 2087, 3379, ...
		 * P,  7, j: -1, -1, -1, -1, -1, -1,  6, 13, 24, 41, 68, 113, 185, 301, 490, 795, 1288, 2087, 3379, ...
		 * P,  8, j: -1, -1, -1, -1, -1, -1,  5, 13, 23, 40, 68, 112, 184, 301, 489, 794, 1288, 2086, 3378, ...
		 * P,  9, j: -1, -1, -1, -1, -1, -1, -1, 12, 23, 40, 67, 112, 184, 300, 489, 794, 1287, 2086, 3378, ...
		 * P, 10, j: -1, -1, -1, -1, -1, -1, -1, 11, 22, 39, 67, 111, 183, 300, 488, 793, 1287, 2085, 3377, ...  
		 * 
		 * Q, 0, i:  1, -1,  2,  3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, ... A004526?
		 * Q, 1, i: -1,  1,  2,  2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9,  9, 10, ... A004526?
		 * Q, 2, i: -1, -1,  1,  2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8,  9,  9, ... A004526?
		 * Q, 3, i: -1, -1, -1,  1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8,  8,  9, ... A004526?
		 * Q, 4, i: -1, -1, -1, -1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7,  8,  8, ... A004526?
		 * 
		 * Q, 0, j:  1, -1,  2,  4, 6, 10, 17, 27, 44, 72, 116, 188, 305, 493, 798, 1292, 2090, 3382, 5473, ... A004695?
		 * Q, 1, j: -1,  1,  2,  3, 6, 10, 16, 27, 44, 71, 116, 188, 304, 493, 798, 1291, 2090, 3382, 5472, ... A201864?
		 * Q, 2, j: -1, -1,  1,  3, 5,  9, 16, 26, 43, 71, 115, 187, 304, 492, 797, 1291, 2089, 3381, 5472, ... unknown
		 * Q, 3, j: -1, -1, -1,  2, 5,  9, 15, 26, 43, 70, 115, 187, 303, 492, 797, 1290, 2089, 3381, 5471, ... unknown
		 * Q, 4, j: -1, -1, -1, -1, 4,  8, 15, 25, 42, 70, 114, 186, 303, 491, 796, 1290, 2088, 3380, 5471, ... unknown 
		 */
	}
}
